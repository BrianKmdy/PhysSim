FIX GRAVITY FORCE CALCULATIONS
pseudo randomly generate galaxies
Change video output properties
Figure out how to make stable orbit


Add charged particles, ability to bounce off border, ability to change scale of the world, if two charged particles collide they either cancel or merge
Add anti aliasing and increase output size. Lua script initializes entire scenario 
Programmable colors in lua
Multi thread physsim with boost? Split list of entities and do grav calculations in parallel
Galactic collisions, 3d phys with 2d rendering? Keep min grav distance, no collisions, and significant objects? High nuns of particles >50000
Lua for scrnarios, "3d balls", make them white, have them merge, use real physics but speed it up, merge when the bigger radius touches the center of the other object, maybe move to a spot that's in between but based on eeight, then look for new merges after merging them
Calculate the physics for the required mass for obejcts in a scenario of 1920x1080 meters (or whatever) to give the acceleration desired. Or maybe use stellar values?
Calculate momentum for collisions mv = m1v1 + m2v2 (right?)

To make faster:
Multithreading
GPU particle simulation
Better video output method (Still images?)












Impement size
Add collisions (And ability to set elasticity, so particles can clump or bounce off each other depending on situation)
Make gravitational (And electrical) attraction not bug out when particles get infinitely close
Add electrical and magnet forces (Charge, electrical and magnetic fields)
Make astronimcal scale functional
Add ability to have all orbiting entities not attracted to each other, just to high mass entity in center (star or galactic center)
Add third dimension
Add ability to render in slower than real time and output to video that plays at real time (or faster/slower than real time)
Add models for planets, household objects, atoms
Add rendered scenery (Background nebula, simple backdrops, solar system, etc)
Add interface to view numerical stats
Make scenarios programmable in python (using boost)
Ability to add fields/Charge distributions (And a way to visualize them in the rendered image if the user wants)
Add ticks per frame
